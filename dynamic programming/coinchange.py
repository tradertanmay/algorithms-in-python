# -*- coding: utf-8 -*-
"""coinchange.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/118vM-0fPU44OiOaKYn7Pg5QTR0884I2x
"""

def getWays(n, c):
  combinations = [0 for x in range(n+1)]
  combinations[0] = 1
  for coin in c: 
    for amount in range(1,n+1):
      if amount>=coin: 
        combinations[amount]+=combinations[amount-coin] 
  return combinations[n]
n =4; c = [1,2,3]
getWays(n,c)

def getWays(n, c):
  no = [i for i in range(n+1)]
  c.insert(0,0)
  z=[[0 for i in no] for j in range(len(c))]
  z[0][0] = 1
  
  for j in range(1,len(c)):
    for i in range(len(no)):
      if c[j]>no[i]:
        z[j][i]= z[j-1][i]
      else:
        z[j][i]= z[j-1][i] + z [j][no[i]-c[j]]
  return(z[-1][-1])
          
n =4; c = [1,2,3]
getWays(n,c)

